** When would you want to use a remote repository rather than keeping
all your work local?

It puts a copy of the repository "in the cloud", no?  which could be
useful for several reasons -- as a way to share the work between
different computers, as a way to share among different users, or as
a backup.  Also it might be a good way to "publish" code, if the 
remote repository is hosted in a place others can easily access.


** Why might you want to always pull changes manually rather than
having Git automatically stay up-to-date with your remote repository?

More control?  If you're the only person working on the remote
repository, having Git automatically pull any changes made to the
remote repository might make sense.  But if you were using it to
collaborate, it might be quite annoying and disruptive to have someone
else's commit overwrite what you're working on.


** Describe the differences between forks, clones, and branches.
When would you use one instead of another?

As I understand it, a clone is a copy of a repository; a fork is 
a GitHub-specific type of clone in which both the original and the
copy are GitHub repositories.  Branches represent sequences of
commits within a single repository.


** What is the benefit of having a copy of the last known state of
the remote stored locally?

    Fill in your answer here

** How would you collaborate without using Git or GitHub?  What would
be easier, and what would be harder?

    Fill in your answer here

** When would you want to make changes in a separate branch rather
than directly in master?  What benefits does each approach have?

    Fill in your answer here
