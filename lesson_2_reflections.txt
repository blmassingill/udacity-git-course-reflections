"What happens when you initialize a repository? Why do you need to do it?"

For one thing, the .git directory gets created.  It's said to contain some
sort of metadata, and perhaps that requires some sort of initialization
(that's what a quick look at .git suggests).  


"How is the staging area different from the working directory and
the repository?  What value do you think it offers?"

It's not clear yet *how* it's different, only that it's a distinct 
thing logically between the working directory and the repository.

The video says that it's useful so you can control exactly what
files are stored in the repository.  To me it doesn't seem so obvious
why that would be a good idea if the repository is going to take a
"snapshot" of all files anyway -- unless maybe it allows you to have
files in the working directory that aren't in the repository at all?
which does seem potentially useful.


"How can you use the staging area to make sure you have one commit
per logical change?"

"What are some situations when branches would be helpful in keeping
your history organized? How would branches help?"

"How do the diagrams help you visualize the branch structure?"

"What is the result of merging two branches together? Why do we
represent it in the diagram the way we do?"

"What are the pros and cons of Git's automatic merging vs. always
doing merges manually?"

